<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.ApiGoodDao">

    <resultMap type="io.treasure.entity.GoodEntity" id="goodMap">

        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="barcode" column="barcode"/>
        <result property="price" column="price"/>
        <result property="introduce" column="introduce"/>
        <result property="showInHot" column="show_in_hot"/>
        <result property="units" column="units"/>
        <result property="remarks" column="remarks"/>
        <result property="shelveTime" column="shelve_time"/>
        <result property="shelveBy" column="shelve_by"/>
        <result property="offShelveTime" column="off_shelve_time"/>
        <result property="offShelveBy" column="off_shelve_by"/>
        <result property="offShelveReson" column="off_shelve_reason"/>
        <result property="martId" column="mart_id"/>
        <result property="goodCategoryId" column="good_category_id"/>
        <result property="sales" column="sales"/>
        <result property="buyers" column="buyers"/>
        <result property="status" column="status"/>
        <result property="creator" column="creator"/>
        <result property="createDate" column="create_date"/>
        <result property="updater" column="updater"/>
        <result property="updateDate" column="update_date"/>
        <result property="icon" column="icon"/>
        <result property="favorablePrice" column="favorable_price"/>
        <result property="stock" column="stock"/>
        <result property="rank" column="rank"/>
    </resultMap>
    <select id="getByNameAndMerchantId" parameterType="io.treasure.entity.MerchantEntity" resultType="java.util.Map">
        select * from ct_good  where mart_id=#{martId} and name=#{name}  and status!=9   and outside in (1,2) order by id desc
    </select>
    <update id="updateStatusById" parameterType="io.treasure.entity.MerchantEntity">
        update ct_good set status=#{status} where id=#{id}  order by rank asc
    </update>
    <select id="getGoodCategoryByMartId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodCategoryEntity">
      select  *  from  ct_good_category   where merchant_id=#{martId} and status= 1 order by sort asc
    </select>
    <select id="getGoodsByMartId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodEntity">
        select * FROM ct_good where 1=1
        <if test="martId != null">
            and mart_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if> and `status`=1  and outside in (1,2)
         order by rank asc
    </select>
    <select id="getoutsideGoodsByMartId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodEntity">
        select * FROM ct_good where 1=1
        <if test="martId != null">
            and mart_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if> and `status`=1   and ouside in (0,1)
        order by rank asc
    </select>
    <select id="getGoodsByGoodCategoryId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodEntity">
       select * FROM ct_good where mart_id=#{martId}  and good_category_id=#{goodCategoryId} and `status`=1 and outside in (1,2)

        order by rank asc
    </select>
    <select id="getoutsideGoodsByGoodCategoryId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodEntity">
       select * FROM ct_good where mart_id=#{martId}  and good_category_id=#{goodCategoryId} and `status`=1 and outside in (0,1)
        order by rank asc
    </select>
    <select id="getShowInHotbyMartId" parameterType="io.treasure.entity.GoodEntity" resultType="io.treasure.dto.GoodDTO">
        select * from ct_good where mart_id=#{martId} and show_in_hot=1 and status=1 and outside in (1,2) order by rank asc
    </select>

    <select id="goodPageListPC" resultType="io.treasure.dto.GoodPagePCDTO">
        SELECT
        ct.id
        ,ct.`name`
        ,ct.description
        ,ct.price
        ,ct.introduce
        ,ct.show_in_hot as showInHot
        ,ct.units
        ,ct.remarks
        ,ct.outside
        ,ct.out_price as outPrice
        ,ct.sales
        ,ct.buyers
        ,ct.status
        ,date_format(ct.create_date, '%Y-%m-%d %H:%i:%s') as createDate
        ,ct.icon
        ,ct.favorable_price as favorablePrice
        ,ct.stock
        ,ct.number
        ,ct.mart_id
        ,mer.`name` as merchantName
        ,cat.`name` as categoryName
        FROM ct_good ct
        LEFT JOIN
            ct_merchant mer on mer.id = ct.mart_id
        LEFT JOIN
            ct_good_category cat on cat.id = ct.good_category_id
        where
            ct.`status` != 9 and
            ct.mart_id = #{mid}
        <if test="startDate != null and startDate.trim() != ''">
            <![CDATA[ and date_format(ct.create_date, '%Y-%m-%d') >= #{startDate} ]]>
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            <![CDATA[ and date_format(ct.create_date, '%Y-%m-%d') <= #{endDate} ]]>
        </if>
        ORDER BY ct.rank
    </select>
</mapper>