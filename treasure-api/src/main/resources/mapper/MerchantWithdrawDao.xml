<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.MerchantWithdrawDao">

    <resultMap type="io.treasure.entity.MerchantWithdrawEntity" id="merchantWithdrawMap">

        <result property="id" column="id"/>
        <result property="money" column="money"/>
        <result property="type" column="type"/>
        <result property="way" column="way"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="verify" column="verify"/>
        <result property="verifyDate" column="verify_date"/>
        <result property="verifyReason" column="verify_reason"/>
        <result property="verifyState" column="verify_state"/>
    </resultMap>
    <update id="updateStatusById" parameterType="io.treasure.entity.MerchantWithdrawEntity">
        update ct_merchant_withdraw set status=#{status} where id=#{id}
    </update>
    <update id="verify" parameterType="io.treasure.entity.MerchantWithdrawEntity">
        update ct_merchant_withdraw
        set verify_state=#{verifyState},
        verify_reason=#{verifyReason},
        verify_date=#{verifyDate},
        verify=#{verify} ,
        updater=#{verify}
        where id=#{id}
    </update>
    <select id="selectTotalCath" resultType="java.math.BigDecimal">
        SELECT SUM(merchant_proceeds)
        FROM ct_master_order
        WHERE merchant_id = #{martId} AND status IN (2,4,7,10) and check_status = 1
    </select>
    <select id="selectAlreadyCash" resultType="java.lang.Double">
        SELECT SUM(money)   FROM  ct_merchant_withdraw where merchant_id = #{martId} and verify_state= 2
    </select>
    <select id="selectByMartId" resultType="java.lang.Double">
         SELECT SUM(money)   FROM  ct_merchant_withdraw where merchant_id = #{martId} and verify_state in(1,2)
    </select>
    <select id="selectWaitByMartId" resultType="java.lang.Double">
         SELECT SUM(money)   FROM  ct_merchant_withdraw where merchant_id = #{martId} and verify_state in(1)
    </select>
    <select id="selectPoByMartID" parameterType="io.treasure.entity.MerchantWithdrawEntity" resultType="io.treasure.entity.MerchantWithdrawEntity">
              SELECT *  FROM  ct_merchant_withdraw where merchant_id = #{martId}
    </select>
    <select id="selectOrderByMartID" resultType="io.treasure.entity.MasterOrderEntity">
        select * from  ct_master_order where 1=1 and merchant_id = #{merchantId}
    </select>
    <select id="listPage" resultType="io.treasure.dto.MerchantWithdrawDTO">
        select draw.*,merchant.name merchantName,user.name userName,user.mobile userMobile,user.username  nickName
        from ct_merchant_withdraw draw
        left join ct_merchant merchant on merchant.id=draw.merchant_id
        left join ct_client_user user on user.id=draw.creator
        where 1=1
        <if test="status != null">
            and draw.status = #{status}
        </if>
        <if test="verifyState != null">
            and draw.verify_state = #{verifyState}
        </if>
        <if test="merchantId != null">
            and draw.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="selectWithStatus" resultType="java.lang.String">
select param_value from sys_params where id=1144988823431553026
    </select>
    <select id="selectPointMoney" resultType="java.math.BigDecimal">
          SELECT SUM(platform_brokerage)
        FROM ct_master_order
        WHERE merchant_id = #{martId} AND status IN (2,4,7,10) and check_status = 1
    </select>
    <select id="selectByMartIdAndStasus" resultType="io.treasure.dto.MerchantWithdrawDTO">
         SELECT *  FROM  ct_merchant_withdraw where merchant_id = #{martId} and verify_state = 1

    </select>
<!--    查询列表-->
    <select id="selectByObject" resultType="io.treasure.entity.MerchantWithdrawEntity" parameterType="io.treasure.dto.QueryWithdrawDto">
        select * from ct_merchant_withdarw

        <where>
            <if test="merchantId != null and merchantId !=''">
                and merchant_id = #{merchantId}
            </if>
            <if test="startTime != null and startTime != ''">
                and DATE_FORMAT(update_date,'%Y %m %d %T') >= DATE_FORMAT(#{startTime},'%Y %m %d %T')
            </if>
            <if test="stopTime != null and stopTime != ''">
                and DATE_FORMAT(#{stopTime},'%Y %m %d %T') >= DATE_FORMAT(update_date,'%Y %m %d %T')
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>

        </where>
    </select>
<!--    分类汇总-->
    <select id="selectTotalByType" resultType="double" parameterType="io.treasure.dto.QueryWithdrawDto">
        select sum(money) from ct_merchant_withdarw
        <where>
            <if test="merchantId != null and merchantId !=''">
                and merchant_id = #{merchantId}
            </if>
            <if test="startTime != null and startTime != ''">
                and DATE_FORMAT(update_date,'%Y %m %d %T') >= DATE_FORMAT(#{startTime},'%Y %m %d %T')
            </if>
            <if test="stopTime != null and stopTime != ''">
                and DATE_FORMAT(#{stopTime},'%Y %m %d %T') >= DATE_FORMAT(update_date,'%Y %m %d %T')
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="verifyState != null and verifyState != ''">
                and verify_state = #{verifyState}
            </if>
            <choose>
                <when test="groupByType == 1 and verifyState != null and verifyState != ''">
                    group by verify_state
                </when>
                <when test="groupByType == 2 and merchantId != null and merchantId != ''">
                    group by merchant_id
                </when>
                <when test="groupByType == 3 and type != null and type != ''">
                    group by type
                </when>
                <when test="groupByType == 4 and verify != null verify != ''">
                    group by verify
                </when>
            </choose>
        </where>
    </select>

    <select id="getMerchanWithDrawAll"  resultType="io.treasure.dto.MerchantWithdrawDTO">
        select cm.name,cm.total_cash,cm.mobile,mw.money,mw.type,mw.way,mw.status,mw.remark,
                mw.create_date,mw.creator,mw.verify,mw.verify_date,mw.verify_reason,mw.verify_state from ct_merchant_withdraw mw , ct_merchant cm
    </select>
    <select id="getMerchanWithDrawByMerchantId"  resultType="io.treasure.dto.MerchantWithdrawDTO">
        select cm.name,cm.total_cash,cm.mobile,mw.money,mw.type,mw.way,mw.status,mw.remark,
                mw.create_date,mw.creator,mw.verify,mw.verify_date,mw.verify_reason,mw.verify_state from ct_merchant_withdraw mw , ct_merchant cm
        where 1=1
        <if test="mobile != null and mobile!='' ">
            and  cm.mobile like  CONCAT('%',${mobile},'%')
        </if>
        <if test="createDateTop != null  and createDateTop!='' and createDateTop != 'undefined' and createDateDown != null and createDateDown !='' and createDateDown!='undefined' ">
            and mw.create_date BETWEEN #{createDateTop} AND #{createDateDown}
        </if>
        <if test="merchantId != null and merchantId!='' ">
            and  mw.merchant_id= cm.id
        </if>


    </select>


</mapper>