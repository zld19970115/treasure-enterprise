<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.GoodDao">

    <resultMap type="io.treasure.entity.GoodEntity" id="goodMap">

        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="barcode" column="barcode"/>
        <result property="price" column="price"/>
        <result property="introduce" column="introduce"/>
        <result property="showInHot" column="show_in_hot"/>
        <result property="units" column="units"/>
        <result property="remarks" column="remarks"/>
        <result property="shelveTime" column="shelve_time"/>
        <result property="shelveBy" column="shelve_by"/>
        <result property="offShelveTime" column="off_shelve_time"/>
        <result property="offShelveBy" column="off_shelve_by"/>
        <result property="martId" column="mart_id"/>
        <result property="goodCategoryId" column="good_category_id"/>
        <result property="sales" column="sales"/>
        <result property="buyers" column="buyers"/>
        <result property="status" column="status"/>
        <result property="creator" column="creator"/>
        <result property="createDate" column="create_date"/>
        <result property="updater" column="updater"/>
        <result property="updateDate" column="update_date"/>
        <result property="icon" column="icon"/>
        <result property="favorablePrice" column="favorable_price"/>
        <result property="stock" column="stock"/>
        <result property="simplePyName" column="simple_py_name"/>
        <result property="fullPyName" column="full_py_name"/>
    </resultMap>
    <select id="getByNameAndMerchantId" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.dto.GoodDTO">
        select * from ct_good  where mart_id=#{martId} and name=#{name}  and status!=9 order by id desc
    </select>
    <select id="listPage" resultType="io.treasure.dto.GoodDTO">
        select goods.*,merchant.name merchantName,merchant.headUrl merchantIcon
        from ct_good goods
        left join ct_merchant merchant on merchant.id=goods.mart_id
        where 1=1
        <if test="status != null">
            and goods.status = #{status}
        </if>
        <if test=" name != null and name.trim() != ''">
            and goods.name like  CONCAT('%',#{name},'%')
        </if>
        <if test="mart_id != null">
            and goods.mart_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>  and goods.outside in (1,2)
        </if>
    </select>


    <select id="getByInfo" resultType="io.treasure.dto.GoodDTO">
        select goods.*,merchant.name merchantName,cate.name categoryName
        from ct_good goods
        left join ct_merchant merchant on merchant.id=goods.mart_id
        left join ct_good_category cate on cate.id=goods.good_category_id
        where 1=1 and goods.id=#{id}

    </select>

    <update id="updateStatusById" parameterType="io.treasure.entity.MerchantEntity">
        update ct_good set status=#{status} where id=#{id}
    </update>
    <select id="getByid" parameterType="io.treasure.entity.MerchantEntity" resultType="io.treasure.entity.GoodEntity">
        select * from ct_good where id=#{id}
    </select>

    <select id="getRefundGoods"  resultType="io.treasure.entity.SlaveOrderEntity">
        SELECT *  from ct_slave_order where `status`=6 AND order_id=#{orderId} and good_id = #{goodId}
    </select>
    <select id="sortingPage" resultType="io.treasure.dto.GoodDTO">
     select goods.* from ct_good  goods
     left join ct_merchant merchant on merchant.id=goods.mart_id
     where goods.status=1 and merchant.status = 1  and goods.outside in (1,2)
    </select>

    <!--        替换以上查询方法，用于加菜及查询商家商品（仅限于用户使用）    -->
    <select id="selectEnableGoodsByMerchantIdForUserOnly" resultType="io.treasure.dto.GoodDTO" parameterType="long">
        select id,name,description,price,introduce,show_in_hot,units,good_category_id,sales,icon,favorable_price,favorable_price
        from ct_good
        where status = 1
        and mart_id =#{merchantId}  and outside in (1,2)
    </select>

    <!--,icon,full_py_name-->
    <select id="selectDishesMenu" resultType="io.treasure.vo.SimpleDishesVo">
        select name from ct_good
        <where>
            full_py_name like CONCAT(${startLetter},'%')
            or simple_py_name like CONCAT(${startLetter},'%')
            <if test="inList != null and inList !=''">
                or full_py_name > ${startLetter}
            </if>
        </where>
        group by name
        order by full_py_name asc
        limit #{page},#{num}
    </select>

    <select id="selectDishesMenuCount" resultType="io.treasure.vo.SimpleDishesVo">
        select full_py_name from ct_good
        <where>
            full_py_name like CONCAT(${startLetter},'%')
            or simple_py_name like CONCAT(${startLetter},'%')
            or full_py_name > ${startLetter}

        </where>
        group by name
    </select>


    <select id="selectMchViaWholePrice" resultType="io.treasure.vo.SpecifyMerchantVo" parameterType="io.treasure.dto.MerchantQueryDto">
        select cm.id,cm.mobile,cm.name,
               cm.address,cm.brief,cm.businessHours as business_hours,
               cm.headUrl as head_url,cm.score,cm.log,cm.lat,cm.delivery_area,
               cm.remark,cm.closeShopHours as close_shop_hours,cm.monetary,
               cm.monthy_sales,cm.party,cm.special,sum(price) total_price,
            ROUND((ROUND(12756.276*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-lat*PI()/180)/2),2)+
            COS(#{latitude}*PI()/180)*COS(lat*PI()/180)*POW(SIN((#{longitude}*PI()/180-log*PI()/180)/2),2)))*1000))/1000,2) AS distance
        from ct_good
        left join ct_merchant cm
        on ct_good.mart_id = cm.id
        where mart_id in (
          select mart_id
          from ct_good
            <if test="recordsCounter>1">
                where ct_good.name in(${names})
            </if>
            <if test="recordsCounter == 1">
                where ct_good.name = ${names}
            </if>

          group by mart_id
          having count(1) >=${recordsCounter}
        )
        <if test="recordsCounter>1">
            and ct_good.name in (${names})
        </if>
        <if test="recordsCounter == 1">
            and ct_good.name = ${names}
        </if>
        group by mart_id
        order by total_price,distance asc
        limit ${page},${num}
    </select>

    <select id="selectMchCountViaWholePrice" resultType="integer" parameterType="io.treasure.dto.MerchantQueryDto">
        select count(0)
        from ct_good
        <where>
            mart_id in (
                select mart_id
                from ct_good
                    <if test="recordsCounter>1">
                        where ct_good.name in(${names})
                    </if>
                    <if test="recordsCounter == 1">
                        where ct_good.name = ${names}
                    </if>
                group by mart_id

                having count(1) >= ${recordsCounter}

            )
                <if test="recordsCounter>1">
                    and ct_good.name in (${names})
                </if>
                <if test="recordsCounter == 1">
                    and ct_good.name = ${names}
                </if>
        </where>
    </select>

</mapper>