<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.MasterOrderDao">

    <resultMap type="io.treasure.entity.MasterOrderEntity" id="masterOrderMap">

        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="roomId" column="room_id"/>
        <result property="reservationType" column="reservation_type"/>
        <result property="reservationId" column="reservation_id"/>
        <result property="discountId" column="discount_id"/>
        <result property="eatTime" column="eat_time"/>
        <result property="totalMoney" column="total_money"/>
        <result property="payMoney" column="pay_money"/>
        <result property="status" column="status"/>
        <result property="payMode" column="pay_mode"/>
        <result property="invoice" column="invoice"/>
        <result property="description" column="description"/>
        <result property="payDate" column="pay_date"/>
        <result property="contacts" column="contacts"/>
        <result property="responseStatus" column="response_status"/>
        <result property="contactNumber" column="contact_number"/>
        <result property="bmStatus" column="bm_status"/>
        <result property="smsStatus" column="sms_status"/>
        <result property="checkStatus" column="check_status"/>
        <result property="checkMode" column="check_mode"/>
        <result property="refundReason" column="refund_reason"/>
        <result property="refundId" column="refund_id"/>
        <result property="refundDate" column="refund_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="platformBrokerage" column="platform_brokerage"/>
        <result property="merchantProceeds" column="merchant_proceeds"/>
    </resultMap>
    <select id="selectByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order  where order_id=#{orderId}
    </select>
    <select id="listMerchant" parameterType="Map" resultType="io.treasure.dto.MerchantOrderDTO">
        select masterOrder.*,room.name roomName,cuser.head_img userHeadImg from ct_master_order masterOrder
        left join ct_merchant_room room on masterOrder.room_id=room.id
        left join ct_client_user cuser on masterOrder.creator=cuser.id
        <where>
        <if test="ispOrderId != null">
            and masterOrder.p_order_id = '0'
        </if>
        <if test="status != null">
            and masterOrder.status in
            <foreach item="item" index="index" collection="statusStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="merchantId != null">
            and masterOrder.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderId != null  and orderId.trim() != '' ">
            and masterOrder.order_id like CONCAT('%',#{orderId},'%')
        </if>
        </where>
    </select>

    <select id="listMerchantPC" parameterType="Map" resultType="io.treasure.dto.MerchantOrderDTO">
        select l.* from (
            select masterOrder.*,room.name roomName,cuser.head_img userHeadImg from ct_master_order masterOrder
            left join ct_merchant_room room on masterOrder.room_id=room.id
            left join ct_client_user cuser on masterOrder.creator=cuser.id
            where
            masterOrder.p_order_id = '0' and
            masterOrder.status in (2)
            <if test="orderId != null  and orderId.trim() != '' ">
                and masterOrder.order_id like CONCAT('%',#{orderId},'%')
            </if>
            and masterOrder.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
            union all
            select masterOrder.*,room.name roomName,cuser.head_img userHeadImg from ct_master_order masterOrder
            left join ct_merchant_room room on masterOrder.room_id=room.id
            left join ct_client_user cuser on masterOrder.creator=cuser.id
            where
            masterOrder.order_id in (
                select masterOrder.p_order_id from ct_master_order masterOrder
                where
                masterOrder.p_order_id != '0' and
                masterOrder.status in (2)
                <if test="orderId != null  and orderId.trim() != '' ">
                    and masterOrder.order_id like CONCAT('%',#{orderId},'%')
                </if>
                and masterOrder.merchant_id in
                <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                    #{item}
                </foreach>
            )
        ) l GROUP BY l.id
    </select>

    <select id="selectPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id = #{orderId} or order_id  = #{orderId}
    </select>
    <update id="updateStatusAndReason" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set status=#{status},updater=#{updater},refund_reason=#{refundReason},
        refund_date=#{refundDate} where id=#{id}
    </update>

    <update id="updateStatusAndReasonPlus" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set status=#{status},updater=#{updater},refund_reason=#{refundReason},
        refund_date=#{refundDate},response_status=#{responseStatus}
        where id=#{id}
    </update>

    <update id="updateStatusById" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set status=#{status},updater=#{updater},refund_reason=#{refundReason},
        refund_date=#{refundDate},check_status=1 where id=#{id}
    </update>

    <select id="getOrderByOrderId" parameterType="map" resultType="io.treasure.dto.MasterOrderDTO">
        select *  from ct_master_order where order_id=#{orderId}
    </select>
    <select id="updateOrderStatus" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set  status=#{status}  where order_id=#{orderId} ;
    </select>
    <update id="updatePayMode" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order set pay_mode=#{payMode} where order_id=#{orderId}
    </update>
    <select id="getOrderById" parameterType="map" resultType="io.treasure.dto.MasterOrderDTO">
        SELECT *  from ct_master_order where id=#{id}
    </select>
    <select id="selectBYPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
          select * from ct_master_order where p_order_id = #{orderId} and status not in (1,3,5,8,9)
    </select>
    <select id="selectPOrderIdByMainOrderID" resultType="io.treasure.entity.MasterOrderEntity">
          select * from ct_master_order where p_order_id = #{orderId} and reservation_type = 2 and status not in(1,3,8,11)
    </select>
    <select id="selectPOrderIdAndS1" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status  in (1,3,4,5,8,9)
    </select>
    <select id="selectPorderIdTypeTwo" resultType="integer">
         select COUNT(*) from ct_master_order where p_order_id = #{orderId};
    </select>
    <select id="selectByMasterIdAndStatus" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where merchantId = #{martId} and status = 4
    </select>
    <update id="updatePayMoney" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order set pay_money=#{PayMoney} where order_id=#{orderId}
    </update>
    <select id="getRoomOrderByPorderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  reservation_type=2 and status = 2
    </select>
    <select id="getOrderByPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id = #{orderId} and status  in (2,4,6)
    </select>
    <select id="listMerchant2" parameterType="Map" resultType="io.treasure.dto.MerchantOrderDTO">
        select masterOrder.*,room.name roomName,cuser.head_img userHeadImg ,cs.status as csStatus from ct_master_order masterOrder
        left join ct_merchant_room room on masterOrder.room_id=room.id
        left join ct_client_user cuser on masterOrder.creator=cuser.id
        left join ct_stimme cs on cs.order_id =masterOrder.order_id
        where 1=1
        <if test="orderId != null  and orderId.trim() != '' ">
            and masterOrder.order_id like CONCAT('%',#{orderId},'%')
        </if>
        <if test="status != null">
            and masterOrder.status in
            <foreach item="item" index="index" collection="statusStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="merchantId != null">
            and masterOrder.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getAllMainOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where creator=#{userId} and p_order_id='0' and deleted = 0
    </select>
    <select id="getAuxiliaryOrderByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status IN(2,4,6,7,10)
    </select>
    <select id="getAuxiliaryOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where p_order_id=#{orderId}
    </select>

    <select id="getMasterOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where order_id=#{orderId}
    </select>
    <select id="getOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where order_id=#{orderId}
    </select>

    <select id="selectPOrderIdHavePaid" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status  not in (1,5,8,9)
    </select>

    <select id="selectAgreeRefundOrder" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status=8
    </select>


    <select id="getPayOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where creator=#{userId} and p_order_id='0' and status=#{status}  and deleted = 0
    </select>

    <select id="getAuxiliaryPayOrder" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status=#{status}
    </select>

    <select id="getAuxiliaryPayOrders" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status in (2,7)
    </select>
    <select id="getAuxiliaryPayOrderss" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status in (2,7,10)
    </select>

    <update id="updateSlaveOrderPointDeduction" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order SET merchant_proceeds=#{mp},platform_brokerage=#{pb} where order_id=#{orderId}
    </update>

    <select id="getOrderByReservationId" resultType="io.treasure.entity.MasterOrderEntity">
       select * from ct_master_order where reservation_id=#{reservationId} and check_status != 1 AND status not in (1,3,5,8,9,11)
    </select>
    <select id="getStatus4Order" resultType="io.treasure.entity.MasterOrderEntity">
        select  * from ct_master_order where 1=1
        <if test="merchantId != null  and merchantId>0 ">
            and merchant_id = #{merchantId}
        </if>
         and status = 4
    </select>
    <select id="getOrder1" resultType="io.treasure.dto.OrderDTO">
           select * from ct_master_order where order_id=#{orderId}  or p_order_id =#{orderId}

    </select>
    <select id="getOrderDTOByPorderId" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId} and reservation_type = 2
    </select>

    <select id="getAffiliateOrde" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId}
    </select>
    <select id="selectPOrderIdAndS" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId} and status  in (1,3,4,5,8,9)
    </select>
    <select id="selectOrder" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where order_id = #{orderId}
    </select>
    <select id="selectByUserId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where creator = #{userId} and status in (2,4,6,7);
    </select>
    <select id="selectByMasterId" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where status in (2,4,6,7)
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPlatformBalance" resultType="java.math.BigDecimal">
        select sum(pay_money) from ct_master_order where `status` =10
    </select>

    <select id="getOrderByFinance" resultType="io.treasure.dto.MasterOrderDTO">
        select * from ct_master_order where p_order_id=#{orderId} and status in(2,7,8)
    </select>
    <select id="selectUnPayOrderByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order
        where order_id=#{orderId} and status = 1
    </select>
    <select id="getPayOrders" resultType="io.treasure.dto.OrderDTO">
            select * from ct_master_order where creator=#{userId} and p_order_id='0' and status in (2,4,6,7) and deleted = 0
    </select>
    <select id="selectNodelOrders" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order
        where p_order_id=#{orderId} and status in (1,2,4,6,7,10)
    </select>
    <select id="getOrder2" resultType="io.treasure.entity.MasterOrderEntity">
          select * from ct_master_order where order_id=#{orderId}  or p_order_id =#{orderId}
    </select>
    <select id="selectSharePorderid" resultType="io.treasure.entity.MasterOrderEntity">
        select * from  ct_master_order where p_order_id =#{orderId} and reservation_type = 2 and status in (2,7)
    </select>
    <select id="selectByPayMode" resultType="java.lang.Integer">
        select paymode from  ct_order_paymode where order_id =#{orderId}
    </select>
    <update id="updatePayStatus">
        update ct_master_order SET status=#{status},pay_mode=#{payMode},pay_date=#{payDate}
        where order_id=#{orderId}
    </update>
    <update id="updateOrderDeletedById">
        update  ct_master_order SET deleted = 1 where id = #{id}
    </update>
    <update id="bmGet">
           update  ct_master_order SET bm_status = 1 where order_id =#{orderId}

    </update>
    <update id="updateSmsStatus">
         update  ct_master_order SET sms_status = 1 where order_id =#{orderId}
    </update>
    <insert id="insertPayMode">
        insert into ct_order_paymode(order_id,paymode)value(#{orderId},#{payfs})
    </insert>

    <select id="backDishesPage" resultType="io.treasure.vo.BackDishesVo">
        select
            cso.order_id as orderId
            ,cso.good_id as goodId
            ,( select good.`name` from ct_good good where good.id = cso.good_id ) as goodName
            ,ctmo.contacts
            ,ctmo.contact_number as contactNumber
            ,( SELECT room.`name` from ct_merchant_room room where room.id = ctmo.room_id ) as roomName
            ,cso.pay_money as payMoney
            ,cso.description
            ,ctmo.eat_time as eatTime
        from ct_slave_order cso
        LEFT JOIN ct_master_order ctmo on ctmo.order_id = cso.order_id and ctmo.`status` = 2
        where cso.`status` = 6
        <if test="orderId != null  and orderId != '' ">
            and cso.order_id = #{orderId}
        </if>
    </select>

    <select id="pagePC" resultType="io.treasure.vo.OrderVo">
        select
            ctmo.id,
            ctmo.order_id as orderId,
            cm.`name` as merchantName,
            (select room.`name` from ct_merchant_room room where room.id = ctmo.room_id) as roomName,
            (select ctrp.content from ct_merchant_room_params ctrp where ctrp.id =
            (select ctrps.room_params_id from ct_merchant_room_params_set ctrps where ctrps.id = ctmo.reservation_id)
            ) as reservationName,
            ctmo.reservation_type as reservationType,
            ctmo.preferential_type as preferentialType,
            ctmo.discount_id as discountId,
            date_format(ctmo.eat_time, '%Y-%m-%d %H') as eatTime,
            ctmo.total_money as totalMoney,
            ctmo.gift_money as giftMoney,
            ctmo.pay_money as payMoney,
            ctmo.`status`,
            ctmo.pay_mode as payMode,
            ctmo.invoice,
            ctmo.description,
            date_format(ctmo.pay_date, '%Y-%m-%d %H:%i:%S') as payDate,
            ctmo.contacts,
            ctmo.contact_number as contactNumber,
            ctmo.check_status as checkStatus,
            ctmo.check_mode as checkMode,
            ctmo.refund_id as refundId,
            ctmo.refund_reason as refundReason,
            date_format(ctmo.refund_date, '%Y-%m-%d %H:%i:%S') as refundDate,
            date_format(ctmo.create_date, '%Y-%m-%d %H:%i:%S') as createDate,
            ctmo.p_order_id as porderId,
            ctmo.merchant_proceeds as merchantProceeds,
            ctmo.platform_brokerage as platformBrokerage,
            u.mobile
        from ct_master_order ctmo
        LEFT JOIN ct_merchant cm on cm.id = ctmo.merchant_id
        LEFT JOIN ct_client_user u on u.id = ctmo.creator
        where ctmo.`status` != 9
        <if test="startDate != null and startDate.trim() != ''">
            <![CDATA[ and date_format(ctmo.create_date, '%Y-%m-%d') >= #{startDate} ]]>
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            <![CDATA[ and date_format(ctmo.create_date, '%Y-%m-%d') <= #{endDate} ]]>
        </if>
        <if test="orderId != null and orderId.trim() != ''">
            and ctmo.order_id like CONCAT('%',#{orderId},'%')
        </if>
        <if test="merchantName != null and merchantName.trim() != ''">
            and cm.`name` like CONCAT('%',#{merchantName},'%')
        </if>
        <if test="status != null">
            and ctmo.`status` = #{status}
        </if>
        <if test="payMode != null">
            and ctmo.pay_mode = #{payMode}
        </if>
        <if test="mobile != null and mobile.trim() != ''">
            and u.mobile like CONCAT('%',#{mobile},'%')
        </if>
        order by ctmo.create_date desc
    </select>

    <select id="pagePCTotalRow" resultType="io.treasure.vo.OrderVo">
        select
        IFNULL(sum(ctmo.total_money),0) as totalMoney,
        IFNULL(sum(ctmo.gift_money),0) as giftMoney,
        IFNULL(sum(ctmo.pay_money),0) as payMoney,
        IFNULL(sum(ctmo.merchant_proceeds),0) as merchantProceeds,
        IFNULL(sum(ctmo.platform_brokerage),0) as platformBrokerage
        from ct_master_order ctmo
        LEFT JOIN ct_merchant cm on cm.id = ctmo.merchant_id
        LEFT JOIN ct_client_user u on u.id = ctmo.creator
        where ctmo.`status` != 9
        <if test="startDate != null and startDate.trim() != ''">
            <![CDATA[ and date_format(ctmo.create_date, '%Y-%m-%d') >= #{startDate} ]]>
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            <![CDATA[ and date_format(ctmo.create_date, '%Y-%m-%d') <= #{endDate} ]]>
        </if>
        <if test="orderId != null and orderId.trim() != ''">
            and ctmo.order_id like CONCAT('%',#{orderId},'%')
        </if>
        <if test="merchantName != null and merchantName.trim() != ''">
            and cm.`name` like CONCAT('%',#{merchantName},'%')
        </if>
        <if test="status != null">
            and ctmo.`status` = #{status}
        </if>
        <if test="payMode != null">
            and ctmo.pay_mode = #{payMode}
        </if>
        <if test="mobile != null and mobile.trim() != ''">
            and u.mobile like CONCAT('%',#{mobile},'%')
        </if>
        order by ctmo.create_date desc
    </select>

    <select id="roomOrderPrinter" resultType="io.treasure.vo.RoomOrderPrinterVo">
        select
            ct.order_id as orderId,
            ctm.`name`,
            date_format(ct.create_date, '%Y-%m-%d %H:%i:%S') as createDate,
            date_format(ct.eat_time, '%Y-%m-%d %H:%i:%S') as eatTime,
            IFNULL(ct.description,'') as description,
            ct.gift_money as giftMoney,
            (ct.total_money+ct.gift_money) as totalMoney,
            ct.pay_money as payMoney,
            IFNULL(room.`name`,'') as roomName,
            IFNULL(ct.contacts,'') as contacts,
            ct.contact_number as contactNumber
        from
            ct_master_order ct
        LEFT JOIN
            ct_merchant ctm on ctm.id = ct.merchant_id
        LEFT JOIN
            ct_merchant_room room on room.id = ct.room_id
        where ct.id = #{orderId}
    </select>

    <select id="goodPrinter" resultType="io.treasure.vo.GoodPrinterVo">
        SELECT
        good.`name`,
        ROUND(ct.quantity) as quantity,
        (ct.pay_money + ct.free_gold) as totalMoney
        FROM
            ct_slave_order ct
        LEFT JOIN
            ct_good good on good.id = ct.good_id
        where
            ct.`status` in (2,4,7)
	        and ct.order_id = #{orderId}
    </select>


    <select id="getOrderByYwy" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where status = 4 and DATE_ADD(create_date,INTERVAL 3 MINUTE) > now() and  merchant_id =#{martId}


    </select>
    <select id="selectForBm" resultType="io.treasure.dto.OrderDTO">
           select * from ct_master_order where status = 4 and sms_status = 0  and DATE_ADD(create_date,INTERVAL 3 MINUTE) > now()

    </select>

</mapper>
