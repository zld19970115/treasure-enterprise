<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.StatisticsDao">


    <resultMap type="io.treasure.entity.MasterOrderEntity" id="masterOrderMap">

        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="roomId" column="room_id"/>
        <result property="reservationType" column="reservation_type"/>
        <result property="reservationId" column="reservation_id"/>
        <result property="discountId" column="discount_id"/>
        <result property="eatTime" column="eat_time"/>
        <result property="totalMoney" column="total_money"/>
        <result property="payMoney" column="pay_money"/>
        <result property="status" column="status"/>
        <result property="payMode" column="pay_mode"/>
        <result property="invoice" column="invoice"/>
        <result property="description" column="description"/>
        <result property="payDate" column="pay_date"/>
        <result property="contacts" column="contacts"/>
        <result property="contactNumber" column="contact_number"/>
        <result property="checkStatus" column="check_status"/>
        <result property="checkMode" column="check_mode"/>
        <result property="refundReason" column="refund_reason"/>
        <result property="refundId" column="refund_id"/>
        <result property="refundDate" column="refund_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
    </resultMap>
    <select id="todayOrder" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">

        select count(*)  from ct_master_order    where  DATE_FORMAT(create_date,'%Y-%m-%d') = #{format}   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
        and `status` != 9
        and p_order_id = '0'
    </select>
    <select id="todayReserve" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">
        select
        count(*)
        from
        ct_master_order
        where
        eat_time > now()
        <if test="merchantId != null">
            and merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and status in (1,2,3,4,5,6,7)
        and  DATE_FORMAT(create_date,'%Y-%m-%d') = #{format}
        and p_order_id = '0'
    </select>
    <select id="todayQuit" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">

        select count(*)  from ct_master_order    where status in (6,7,8) and p_order_id='0' and  DATE_FORMAT(create_date,'%Y-%m-%d') = #{format}   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    </select>

    <select id="todayMoney" parameterType="io.treasure.entity.MasterOrderEntity" resultType="double">

        select IFNULL(sum(pay_money),0.00) from ct_master_order    where  DATE_FORMAT(create_date,'%Y-%m-%d') = #{format} and status in(2,4,7,10) and check_status = 1  <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    </select>
    <select id="monthOrder" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">

        select count(*)  from ct_master_order    where  DATE_FORMAT(create_date,'%Y-%m') = #{month}   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>  and status != 9 and p_order_id='0'
    </select>

    <select id="monthReserve" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">

        select count(*)  from ct_master_order    where  eat_time > now()    <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>  and status  in (1,2,3,4,5,6,7,10) and  DATE_FORMAT(create_date,'%Y-%m') = #{month} and p_order_id='0'
    </select>
    <select id="monthQuit" parameterType="io.treasure.entity.MasterOrderEntity" resultType="int">

        select count(*)  from ct_master_order    where  status in (6,7,8) and p_order_id='0' and  DATE_FORMAT(create_date,'%Y-%m') = #{month}  <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    </select>
    <select id="monthMoney" parameterType="io.treasure.entity.MasterOrderEntity" resultType="double">

        select IFNULL(sum(pay_money),0.00)  from ct_master_order    where  DATE_FORMAT(create_date,'%Y-%m') = #{month} and status  in(2,4,7,10) and check_status = 1   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    </select>
    <select id="allMoney" parameterType="io.treasure.entity.MasterOrderEntity" resultType="double">

        select IFNULL(sum(pay_money),0.00)  from ct_master_order    where  status in(2,4,7,10)   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>
    </select>
    <select id="assignOrder" parameterType="io.treasure.entity.MasterOrderEntity"  resultType="java.lang.Integer">
        select count(*) from ct_master_order where
        `status` != 9
        and p_order_id = '0'
        <if test="merchantId != null">
            and merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>  and DATE_FORMAT(create_date,'%Y-%m-%d')
        between #{startTime1}
        and #{endTime1}
    </select>
    <select id="assignReserve" parameterType="io.treasure.entity.MasterOrderEntity" resultType="java.lang.Integer">
        select
        count(*)
        from
        ct_master_order
        where
        eat_time > now()
        <if test="merchantId != null">
            and merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and status  in (1,2,3,4,5,6,7,10)
        and DATE_FORMAT(create_date,'%Y-%m-%d') between #{startTime1} and #{endTime1}
        and p_order_id = '0'
    </select>
    <select id="assignQuit"  parameterType="io.treasure.entity.MasterOrderEntity"  resultType="java.lang.Integer">
        select count(*) from ct_master_order where status in (6,7,8)   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>  and DATE_FORMAT(create_date,'%Y-%m-%d')
        between #{startTime1}
        and #{endTime1}
        and p_order_id= '0'
    </select>
    <select id="assignMoney" parameterType="io.treasure.entity.MasterOrderEntity" resultType="java.lang.Double">
        select IFNULL(sum(pay_money),0.00)  from ct_master_order    where  status in(2,4,7,10)   <if test="merchantId != null">
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </if>  and DATE_FORMAT(create_date,'%Y-%m-%d') between #{startTime1}
        and #{endTime1}
        and check_status = 1
    </select>

    <!-- 查询商户热销产品排行统计 -->
    <select id="getTopSellersRanking" parameterType="io.treasure.dto.TopSellersRankingDto" resultType="io.treasure.vo.TopSellersRankingVo">
        select
        t.name,SUM(t.count) as count,SUM(t.total) as total ,t.icon as url
        from (
        SELECT
        cg.`name`,
        cg.icon,
        ctso.quantity-ctso.refund_quantity as count,
        ctso.price*(ctso.quantity-ctso.refund_quantity) as total
        from
        ct_slave_order ctso
        LEFT JOIN
        ct_good cg on
        ctso.good_id = cg.id
        WHERE
        ctso.order_id in (
        select
        ctmo.order_id
        from
        ct_master_order ctmo
        where
        ctmo.merchant_id = #{merchantId}
        and ctmo.`status` = 10
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        )
        and ctso.`status` = 10
        ) t
        GROUP BY
        name
        ORDER BY
        <if test="sortField == null or sortField==0" >
            total
        </if>
        <if test="sortField != null and sortField==1" >
            count
        </if>
        <if test="sort != null and sortField==0" >
            asc
        </if>
        <if test="sort == null or sortField==1" >
            desc
        </if>
    </select>

    <!-- 查询用户订单量排行DTO -->
    <select id="getConsumptionRanking" parameterType="io.treasure.dto.ConsumptionRankingDto" resultType="io.treasure.vo.ConsumptionRankingVo">
        select
        ccu.username as userName,
        COUNT(ccu.username) as count,
        (
        SELECT IFNULL(SUM(ctmo1.merchant_proceeds),0) FROM ct_master_order ctmo1 where ctmo1.creator = ccu.id and ctmo1.`status` = 10 and ctmo1.merchant_id = #{merchantId}
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo1.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo1.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        ) as completeTotal,
        (
        SELECT IFNULL(count(ctmo1.order_id),0) FROM ct_master_order ctmo1 where ctmo1.creator = ccu.id and ctmo1.`status` = 10 and ctmo1.merchant_id = #{merchantId}
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo1.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo1.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        and ctmo1.p_order_id = '0'
        ) as completeCount,
        (
        SELECT IFNULL(SUM(ctmo3.merchant_proceeds),0) FROM ct_master_order ctmo3 where ctmo3.creator = ccu.id and ctmo3.`status` in (3,5,8) and ctmo3.merchant_id = #{merchantId}
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo3.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo3.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        and ctmo3.p_order_id = '0'
        ) as cancelTotal,
        (
        SELECT IFNULL(count(ctmo3.order_id),0) FROM ct_master_order ctmo3 where ctmo3.creator = ccu.id and ctmo3.`status` in (3,5,8) and ctmo3.merchant_id = #{merchantId}
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo3.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo3.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        and ctmo3.p_order_id = '0'
        ) as cancelCount
        from
        ct_master_order ctmo
        LEFT JOIN
        ct_client_user ccu ON ctmo.creator = ccu.id
        WHERE
        ctmo.merchant_id = #{merchantId} and ctmo.`status` in (10 ,8 , 5, 3)
        <if test="startDate != null and startDate != ''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        and ctmo.p_order_id = '0'
        GROUP BY
        ccu.username
        ORDER BY
        <if test="sortField == null or sortField==0" >
            count
        </if>
        <if test="sortField != null and sortField==1" >
            completeTotal
        </if>
        <if test="sortField != null and sortField==2" >
            completeCount
        </if>
        <if test="sortField != null and sortField==3" >
            cancelTotal
        </if>
        <if test="sortField != null and sortField==4" >
            cancelCount
        </if>
        <if test="sort != null and sortField==0" >
            asc
        </if>
        <if test="sort == null or sortField==1" >
            desc
        </if>
    </select>

    <select id="getTotalCash" resultType="java.math.BigDecimal">
        SELECT
        SUM(ctmo.merchant_proceeds)
        FROM
        ct_master_order ctmo
        where
        ctmo.merchant_id = #{merchantId}
        and ctmo.`status` = 10
        <if test="startTime1 != null and startTime1!=''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &gt;= #{startTime1}
        </if>
        <if test="endTime1 != null and endTime1!=''" >
            and date_format(ctmo.create_date, '%Y-%m-%d') &lt;= #{endTime1}
        </if>
    </select>

    <select id="getMerchantAccount" parameterType="io.treasure.dto.MerchantAccountDto" resultType="io.treasure.vo.MerchantAccountVo">
        select
        ctm.id,
        ctm.`name`,
        ctm.mobile,
        ctm.total_cash as totalCash,
        ctm.already_cash as alreadyCash,
        ctm.not_cash as notCash,
        ctm.wart_cash as wartCash,
        ctm.point_money as pointMoney,
        IFNULL((
        SELECT
        sum(ctmw.money)
        FROM
        ct_merchant_withdraw ctmw
        WHERE
        ctmw.merchant_id = ctm.id
        AND ctmw.type = 1
        AND ctmw.`status`=1 and ctmw.verify_state = 2
        ),0)
        AS wxTotal,
        IFNULL((
        SELECT
        sum(ctmw.money)
        FROM
        ct_merchant_withdraw ctmw
        WHERE
        ctmw.merchant_id = ctm.id
        AND ctmw.type = 2
        AND ctmw.`status`=1 and ctmw.verify_state = 2
        ),0) AS aliTotald,
        (
        SELECT
        COUNT(ctmo.id)
        from
        ct_master_order ctmo
        where
        ctm.id = ctmo.merchant_id
        and ctmo.`status` = 10
        and date_format(ctmo.eat_time, '%Y-%m') in
        <foreach collection="dateList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        ) as count
        from
        ct_merchant ctm
        <where>
            <if test="name != null and name!=''" >
                and ctm.`name` like concat('%', #{name}, '%')
            </if>
            <if test="mobile != null and mobile!=''" >
                and ctm.mobile like concat('%', #{mobile}, '%')
            </if>
            <if test="id != null and id!=''" >
                and ctm.id = #{id}
            </if>
        </where>
        GROUP BY
        ctm.total_cash desc
    </select>

    <select id="getMerchantAccountPageTotalRow" parameterType="io.treasure.dto.MerchantAccountDto" resultType="io.treasure.vo.MerchantAccountVo">
        select
        sum(ctm.total_cash) as totalCash,
        sum(ctm.already_cash) as alreadyCash,
        sum(ctm.not_cash) as notCash,
        sum(ctm.wart_cash) as wartCash,
        sum(ctm.point_money) as pointMoney,
        sum(IFNULL((
        SELECT
        sum(ctmw.money)
        FROM
        ct_merchant_withdraw ctmw
        WHERE
        ctmw.merchant_id = ctm.id
        AND ctmw.type = 1
        AND ctmw.`status`=1 and ctmw.verify_state = 2
        ),0))
        AS wxTotal,
        sum(IFNULL((
        SELECT
        sum(ctmw.money)
        FROM
        ct_merchant_withdraw ctmw
        WHERE
        ctmw.merchant_id = ctm.id
        AND ctmw.type = 2
        AND ctmw.`status`=1 and ctmw.verify_state = 2
        ),0)) AS aliTotald,
        sum((
        SELECT
        COUNT(ctmo.id)
        from
        ct_master_order ctmo
        where
        ctm.id = ctmo.merchant_id
        and ctmo.`status` = 10
        and date_format(ctmo.eat_time, '%Y-%m') in
        <foreach collection="dateList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        )) as count
        from
        ct_merchant ctm
        <where>
            <if test="name != null and name!=''" >
                and ctm.`name` like concat('%', #{name}, '%')
            </if>
            <if test="mobile != null and mobile!=''" >
                and ctm.mobile like concat('%', #{mobile}, '%')
            </if>
            <if test="id != null and id!=''" >
                and ctm.id = #{id}
            </if>
        </where>
    </select>

    <select id="getCompletaOrder" resultType="java.math.BigDecimal">
        SELECT count(0) FROM `ct_master_order`
        where merchant_id = #{merchantId}
        and `status` = 10
        and p_order_id = '0'
        <if test="startTime1 != null and startTime1!=''" >
            and date_format(create_date, '%Y-%m-%d') &gt;= #{startTime1}
        </if>
        <if test="endTime1 != null and endTime1!=''" >
            and date_format(create_date, '%Y-%m-%d') &lt;= #{endTime1}
        </if>
    </select>

    <select id="getReturnDishesPage" resultType="io.treasure.vo.ReturnDishesPageVo">
        select
            ctmo.order_id as orderId,
            ctmo.contacts,
            ctmo.contact_number as contactNumber,
            ( select ctmr.`name` from ct_merchant_room ctmr where ctmr.id = ctmo.room_id ) as roomName,
            ctmo.pay_money as payMoney,
            ctmo.description,
            ctmo.eat_time as eatTime
        from
            ct_master_order ctmo
        LEFT JOIN
            ct_slave_order ctso on ctso.order_id = ctmo.order_id and ctmo.merchant_id = #{merchantId}
        where
            ctmo.`status` = 2
            and ctso.`status` = 6
            and ctmo.merchant_id = #{merchantId}
            <if test="orderId != null" >
            and ctmo.order_id like concat('%', #{orderId}, '%')
            </if>
        ORDER BY ctmo.eat_time ASC
    </select>

    <select id="getVisualizationRoom" resultType="io.treasure.vo.VisualizationRoomVo">
        SELECT
            room.id,
            ct.type,
            ct.creator,
            room.`name` as roomName,
            room.icon,
            room.num_low as numLow,
            room.num_high as numHigh,
            (SELECT ctp.content FROM ct_merchant_room_params ctp WHERE ctp.id = 1) as oneTime,
            (SELECT ctp.content FROM ct_merchant_room_params ctp WHERE ctp.id = 2) as twoTime,
            (SELECT ctp.content FROM ct_merchant_room_params ctp WHERE ctp.id = 3) as threeTime,
            (SELECT ctp.content FROM ct_merchant_room_params ctp WHERE ctp.id = 4) as fourTime,
            (
                select ct2.state from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 1
                and ct2.room_id = ct.room_id
                <if test="type != null">
                    and ct2.type = #{type}
                </if>
                and ct.merchant_id = #{merchantId}
            ) as oneState,
            (
                select ct2.state from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 2
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as twoState,
            (
                select ct2.state from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 3
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as threeState,
            (
                select ct2.state from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 4
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as fourState,
            (
                select ct2.creator from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 1
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as oneCreator,
            (
                select ct2.creator from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 2
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as twoCreator,
            (
                select ct2.creator from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 3
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as threeCreator,
            (
                select ct2.creator from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 4
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as fourCreator,
            (
                select ct2.id from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 1
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as oneCid,
            (
                select ct2.id from ct_merchant_room_params_set ct2
                where
                date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 2
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as twoCid,
            (
                select ct2.id from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 3
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as threeCid,
            (
                select ct2.id from ct_merchant_room_params_set ct2
                where date_format(ct2.use_date, '%Y-%m-%d') = #{time}
                and ct2.room_params_id = 4
                and ct2.room_id = ct.room_id
        <if test="type != null">
            and ct2.type = #{type}
        </if>
        and ct.merchant_id = #{merchantId}
            ) as fourCid
        from
            ct_merchant_room_params_set ct
        LEFT JOIN
            ct_merchant_room room on room.id = ct.room_id
        where
            ct.merchant_id = #{merchantId}
            and ct.`status` != 9
            and room.`status` != 9
            and date_format(ct.use_date, '%Y-%m-%d') = #{time}
            <if test="type != null">
                and ct.type = #{type}
            </if>
        GROUP BY
            ct.room_id
        ORDER BY
	        ct.id
    </select>

    <select id="selectRoomAllByMid" resultType="io.treasure.vo.VisualizationRoomVo">
        select
        room.id,
        room.type,
        room.`name` as roomName,
        room.icon,
        room.num_low as numLow,
        room.num_high as numHigh,
        1 as flag
        from ct_merchant_room room
        where room.`status` != 9 and room.merchant_id = #{merchantId} and
        room.id not in (select DISTINCT ct.room_id from ct_merchant_room_params_set ct where ct.merchant_id = #{merchantId})
        order by room.id
    </select>

    <select id="daysTogetherPage" resultType="io.treasure.dto.DaysTogetherPageDTO">
        SELECT ctdt.pay_date as payDate,ctdt.merchant_id as merchantId,ctdt.pay_type as payType,sum(ctdt.order_total) as orderTotal,
        sum(ctdt.service_chanrge) as serviceChanrge,sum(ctdt.merchant_proceeds) as merchantProceeds,sum(ctdt.platform_brokerage) as platformBrokerage,
        sum(ctdt.reality_money) as realityMoney,sum(ctdt.merchant_discount_amount) as merchantDiscount_amount,sum(ctdt.gift_money) as giftMoney
        , ctm.`name`,
        ctm.id as mid,
        sum(ctdt.platform_brokerage-ctdt.gift_money) as platformRealityMoney,
        sum(ctdt.pay_coins) as payCoins,
        sum(ctdt.reality_money - ctdt.pay_coins) as realityMoneyNew
        from ct_days_together ctdt
         left join ct_merchant ctm on ctm.id = ctdt.merchant_id
        LEFT JOIN ct_merchant_user mu on mu.merchantId = ctdt.merchant_id
         <where>
            <if test="startDate != null and startDate.trim() != ''">
                and date_format(ctdt.pay_date, '%Y-%m-%d') &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                and date_format(ctdt.pay_date, '%Y-%m-%d') &lt;= #{endDate}
            </if>
            <if test="payType != null and payType.trim() != ''">
                and ctdt.pay_type = #{payType}
            </if>
             <if test="name != null and name.trim() != ''">
                 and ctm.`name` like CONCAT('%',#{name},'%')
             </if>
             <if test="mobile != null and mobile.trim() != ''">
                 and mu.mobile like CONCAT('%',#{mobile},'%')
             </if>
         </where>
        group by ctdt.id
    </select>

    <select id="daysTogetherPageTotalRow" resultType="io.treasure.dto.DaysTogetherPageDTO">
        SELECT
        sum(ctdt.order_total) as orderTotal,
        sum(ctdt.service_chanrge) as serviceChanrge,
        sum(ctdt.merchant_proceeds) as merchantProceeds,
        sum(ctdt.platform_brokerage) as platformBrokerage,
        sum(ctdt.reality_money) as realityMoney,
        sum(ctdt.merchant_discount_amount) as merchantDiscount_amount,
        sum(ctdt.gift_money) as giftMoney,
        sum(ctdt.platform_brokerage-ctdt.gift_money) as platformRealityMoney,
        sum(ctdt.pay_coins) as payCoins,
        sum(ctdt.reality_money - ctdt.pay_coins) as realityMoneyNew
        from ct_days_together ctdt
        left join ct_merchant ctm on ctm.id = ctdt.merchant_id
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                and date_format(ctdt.pay_date, '%Y-%m-%d') &gt;= #{startDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                and date_format(ctdt.pay_date, '%Y-%m-%d') &lt;= #{endDate}
            </if>
            <if test="payType != null and payType.trim() != ''">
                and ctdt.pay_type = #{payType}
            </if>
            <if test="name != null and name.trim() != ''">
                and ctm.`name` like CONCAT('%',#{name},'%')
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and ctm.mobile like CONCAT('%',#{mobile},'%')
            </if>
        </where>
    </select>

    <select id="daysTogetherStat" resultType="io.treasure.vo.DaysTogetherStatisticsVo">
        SELECT
        sum(case pay_type when 1 then 1 else 0 end) as banalceCount,
        sum(case pay_type when 2 then 1 else 0 end) as alipayCount,
        sum(case pay_type when 3 then 1 else 0 end) as wxpayCount,
        sum(case pay_type when 4 then 1 else 0 end) as bankcardCount,
        sum(order_total) AS orderTotal,
        sum(service_chanrge) AS serviceChanrge,
        sum(merchant_proceeds) AS merchantProceeds,
        sum(platform_brokerage) AS platformBrokerage,
        sum(reality_money) AS realityMoney,
        sum(merchant_discount_amount) AS merchantDiscountAmount,
        sum(gift_money) AS giftMoney
        FROM
        ct_days_together
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                and pay_date >= #{startDate}
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[and pay_date <= #{endDate}]]>
            </if>
            <if test="payType != null and payType.trim() != ''">
                and pay_type = #{payType}
            </if>
        </where>
    </select>

    <select id="statSdayDetailPage" resultType="io.treasure.vo.StatSdayDetailPageVo">
    SELECT
        sdd.id,
        sdd.create_date as createDate,
        sdd.order_id as orderId,
        sdd.pay_type as payType,
        sdd.incident_type as incidentType,
        sdd.pay_mobile as payMobile,
        sdd.pay_merchant_name as payMerchantName,
        sdd.pay_merchant_id as payMerchantId,
        sdd.order_total as orderTotal,
        sdd.merchant_discount_amount as merchantDiscountAmount,
        sdd.transaction_amount as transactionAmount,
        sdd.gift_money as giftMoney,
        sdd.reality_money as realityMoney,
        sdd.platform_brokerage as platformBrokerage,
        sdd.merchant_proceeds as merchantProceeds,
        sdd.withdraw_money as withdrawMoney,
        sdd.platform_balance as platformBalance,
        sdd.wx_paymoney as wxPaymoney,
        sdd.ali_paymoney as aliPaymoney,
        sdd.service_charge as serviceCharge,
        sdd.update_date as updateDate,
        (sdd.reality_money - sdd.ye_paymoney) as realityMoneyNew,
        sdd.ye_paymoney as yePaymoney,
        case when sdd.incident_type = 0 then (select ro.order_id from refund_order ro where ro.refund_id = sdd.order_id LIMIT 1) else '' end as tgoodOrderId,
        case when sdd.incident_type = 8 then (select ctmo.order_id from ct_master_order ctmo where ctmo.refund_id = sdd.order_id LIMIT 1) else '' end as torderId
    FROM
	    stats_day_detail sdd
        LEFT JOIN ct_merchant_user mu on mu.merchantId = sdd.pay_merchant_id
	    <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(sdd.create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(sdd.create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="name != null and name.trim() != ''">
                and sdd.pay_merchant_name like CONCAT('%',#{name},'%')
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and mu.mobile like CONCAT('%',#{mobile},'%')
            </if>
        </where>
    </select>

    <select id="statSdayDetailPageTotalRow" resultType="io.treasure.vo.StatSdayDetailPageVo">
        SELECT
        IFNULL(SUM(CASE when sdd.order_total>0 then sdd.order_total else 0 end),0) as orderTotal,
        IFNULL(SUM(CASE when sdd.merchant_discount_amount>0 then sdd.merchant_discount_amount else 0 end),0) as merchantDiscountAmount,
        IFNULL(SUM(CASE when sdd.transaction_amount>0 then sdd.transaction_amount else 0 end),0) as transactionAmount,
        IFNULL(SUM(CASE when sdd.gift_money>0 then sdd.gift_money else 0 end),0) as giftMoney,
        IFNULL(SUM(CASE when sdd.reality_money>0 then sdd.reality_money else 0 end),0) as realityMoney,
        IFNULL(SUM(CASE when sdd.platform_brokerage>0 then sdd.platform_brokerage else 0 end),0) as platformBrokerage,
        IFNULL(SUM(CASE when sdd.merchant_proceeds>0 then sdd.merchant_proceeds else 0 end),0) as merchantProceeds,
        IFNULL(SUM(CASE when sdd.withdraw_money>0 then sdd.withdraw_money else 0 end),0) as withdrawMoney,
        IFNULL(SUM(CASE when sdd.platform_balance>0 then sdd.platform_balance else 0 end),0) as platformBalance,
        IFNULL(SUM(CASE when sdd.wx_paymoney>0 then sdd.wx_paymoney else 0 end),0) as wxPaymoney,
        IFNULL(SUM(CASE when sdd.ali_paymoney>0 then sdd.ali_paymoney else 0 end),0) as aliPaymoney,
        IFNULL(SUM(CASE when sdd.service_charge>0 then sdd.service_charge else 0 end),0) as serviceCharge,
        IFNULL(SUM(CASE when sdd.reality_money>0 then (sdd.reality_money - sdd.ye_paymoney) else 0 end),0) as realityMoneyNew,
        IFNULL(SUM(CASE when sdd.ye_paymoney>0 then sdd.ye_paymoney else 0 end),0) as ye_paymoney
        FROM
            stats_day_detail sdd
        LEFT JOIN ct_merchant ct on ct.id = sdd.pay_merchant_id
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(sdd.create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(sdd.create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="name != null and name.trim() != ''">
                and sdd.pay_merchant_name like CONCAT('%',#{name},'%')
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and ct.mobile like CONCAT('%',#{mobile},'%')
            </if>
        </where>
    </select>

    <select id="fmisHome" resultType="io.treasure.vo.FmisHomeVo">
        SELECT

        IFNULL(SUM( case when `status` = 10 then merchant_proceeds else 0 end ),0) as merchantTotalCash,
        IFNULL(SUM( case when `status` = 10 then gift_money else 0 end ),0) as giftTotalCash,
        <if test="merchantId == null">
            IFNULL(SUM( case when `status` = 10 then pay_coins else 0 end ),0) as balanceTotalCash,
            IFNULL(SUM( case when `status` = 10 and pay_mode = 2 then pay_money else 0 end ),0) as aliTotalCash,
            IFNULL(SUM( case when `status` = 10 and pay_mode = 3 then pay_money else 0 end ),0) as wxTotalCash,
        </if>
        <if test="merchantId != null">
            IFNULL(SUM( case when `status` = 10 and pay_mode = 1 then merchant_proceeds else 0 end ),0) as balanceTotalCash,
            IFNULL(SUM( case when `status` = 10 and pay_mode = 2 then merchant_proceeds else 0 end ),0) as aliTotalCash,
            IFNULL(SUM( case when `status` = 10 and pay_mode = 3 then merchant_proceeds else 0 end ),0) as wxTotalCash,
        </if>
        <if test="merchantId == null">
            IFNULL(SUM( case when `status` = 10 then platform_brokerage else 0 end ),0) as pointMoney,
            IFNULL(SUM( case when `status` = 10 then merchant_proceeds+platform_brokerage else 0 end ),0) as totalCash,
            ( select IFNULL(COUNT(0),0) from ct_merchant
            <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            </where>
            ) as merchantCount,
            (select IFNULL(COUNT(0),0) from ct_client_user ccu
            where ccu.status != 9
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(ccu.create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(ccu.create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            ) as userCount,
        </if>
        IFNULL(SUM( case when `status` = 10 and p_order_id = '0' then 1 else 0 end ),0) as pOrderCount,
        IFNULL(SUM( case when `status` = 10 and p_order_id != '0' then 1 else 0 end ),0) as orderCount
        FROM
            ct_master_order
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(eat_time, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(eat_time, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="merchantId != null">
                and merchant_id = #{merchantId}
            </if>
        </where>
    </select>

    <select id="merchantPage" resultType="io.treasure.vo.MerchantPageVo">
        SELECT * FROM (
        SELECT
        ct.*, IFNULL(c5.money, 0) AS money, IFNULL(c7.money, 0) AS money2
        FROM
        ct_merchant ct
        LEFT JOIN (
        SELECT
        c2.merchant_id,
        CASE
        WHEN c2.check_status = 1
        AND c2.`status` = 10 THEN
        IFNULL(
        SUM(c2.total_money) + SUM(c3.total_money),
        0
        )
        ELSE
        IFNULL(SUM(c3.total_money), 0)
        END AS money
        FROM
        (
        SELECT
        c.order_id,
        c.total_money,
        c.eat_time,
        c.check_status,
        c.`status`,
        c.merchant_id
        FROM
        (
        SELECT
        c1.creator,
        c1.order_id,
        c1.total_money,
        c1.eat_time,
        c1.check_status,
        c1.`status`,
        c1.merchant_id
        FROM
        ct_master_order AS c1
        WHERE
        c1.p_order_id = '0'
        <if test="startDate2 != null and startDate2.trim() != ''">
            <![CDATA[ and date_format(c1.eat_time, '%Y-%m-%d') >= #{startDate2} ]]>
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            <![CDATA[ and date_format(c1.eat_time, '%Y-%m-%d') <= #{endDate2} ]]>
        </if>
        AND (
        (
        c1.`status` = 10
        AND c1.check_status = 1
        )
        OR (
        SELECT
        1
        FROM
        ct_master_order AS c4
        WHERE
        c4.p_order_id = c1.order_id
        AND c4.check_status = 1
        AND c4.`status` = 10
        LIMIT 1
        ) > 0
        )
        ORDER BY
        c1.eat_time ASC
        ) AS c
        GROUP BY
        c.creator,c.merchant_id
        ) c2
        LEFT JOIN ct_master_order c3 ON c2.order_id = c3.p_order_id
        AND c3.check_status = 1
        AND c3.`status` = 10
        GROUP BY
        c2.merchant_id
        ) AS c5 ON ct.id = c5.merchant_id
        LEFT JOIN (
        SELECT
        c2.merchant_id,
        CASE
        WHEN c2.check_status = 1
        AND c2.`status` = 10 THEN
        IFNULL(
        SUM(c2.total_money) + SUM(c3.total_money),
        0
        )
        ELSE
        IFNULL(SUM(c3.total_money), 0)
        END AS money
        FROM
        (

        SELECT
        c1.creator,
        c1.order_id,
        c1.total_money,
        c1.eat_time,
        c1.check_status,
        c1.`status`,
        c1.merchant_id
        FROM
        ct_master_order AS c1
        WHERE
        c1.p_order_id = '0'
        <if test="startDate2 != null and startDate2.trim() != ''">
            <![CDATA[ and date_format(c1.eat_time, '%Y-%m-%d') >= #{startDate2} ]]>
        </if>
        <if test="endDate != null and endDate.trim() != ''">
            <![CDATA[ and date_format(c1.eat_time, '%Y-%m-%d') <= #{endDate2} ]]>
        </if>
        AND (
        (
        c1.`status` = 10
        AND c1.check_status = 1
        )
        OR (
        SELECT
        1
        FROM
        ct_master_order AS c4
        WHERE
        c4.p_order_id = c1.order_id
        AND c4.check_status = 1
        AND c4.`status` = 10
        LIMIT 1
        ) > 0
        )
        ORDER BY
        c1.eat_time ASC
        ) c2
        LEFT JOIN ct_master_order c3 ON c2.order_id = c3.p_order_id
        AND c3.check_status = 1
        AND c3.`status` = 10
        GROUP BY
        c2.merchant_id
        ) AS c7 ON ct.id = c7.merchant_id
        ) as c6
        <where>
            <if test="name != null and name.trim() != ''">
                and c6.name like CONCAT('%',#{name},'%')
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and c6.mobile like CONCAT('%',#{mobile},'%')
            </if>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(c6.create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(c6.create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="auditStatus != null">
                and c6.auditStatus = #{auditStatus}
            </if>
            <if test="money != null">
                and c6.money >= #{money}
            </if>
            <if test="money2 != null">
                and c6.money2 >= #{money2}
            </if>
            <if test="id != null">
                and c6.id = #{id}
            </if>
            <if test="status != null">
                and c6.status = #{status}
            </if>
        </where>
        ORDER BY c6.create_date desc
    </select>

    <select id="smsMerchantPage" resultType="io.treasure.vo.MerchantPageVo">
        select ct.*,cu.client_id from ct_merchant ct
        LEFT JOIN ct_merchant_user cu on ct.id = cu.merchantId
        <where>
            <if test="name != null and name.trim() != ''">
                and ct.name like CONCAT('%',#{name},'%')
            </if>
            <if test="mobile != null and mobile.trim() != ''">
                and ct.mobile like CONCAT('%',#{mobile},'%')
            </if>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and ct.date_format(create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and ct.date_format(create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="auditStatus != null">
                and ct.auditStatus = #{auditStatus}
            </if>
            <if test="status != null">
                and ct.status = #{status}
            </if>
            <if test="id != null">
                and ct.id = #{id}
            </if>
        </where>
        ORDER BY ct.create_date desc
    </select>

    <select id="userChartByDay" resultType="io.treasure.vo.EChartInfoVo">
        select
            date_format(create_date, '%Y-%m-%d') as dataRow,
            count(id) as dataCount
        from
            ct_client_user
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
        </where>
        GROUP BY date_format(create_date, '%Y-%m-%d')
    </select>

    <select id="userChartByYear" resultType="io.treasure.vo.EChartInfoVo">
        select
            date_format(create_date, '%Y-%m') as dataRow,
            count(id) as dataCount
        from
            ct_client_user
        <where>
            <if test="year != null and year.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y') = #{year} ]]>
            </if>
        </where>
        GROUP BY date_format(create_date, '%Y-%m')
    </select>

    <select id="merchantChartByDay" resultType="io.treasure.vo.EChartInfoVo">
        select
        date_format(create_date, '%Y-%m-%d') as dataRow,
        count(id) as dataCount
        from
        ct_merchant
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
        </where>
        GROUP BY date_format(create_date, '%Y-%m-%d')
    </select>

    <select id="merchantChartByYear" resultType="io.treasure.vo.EChartInfoVo">
        select
        date_format(create_date, '%Y-%m') as dataRow,
        count(id) as dataCount
        from
        ct_merchant
        <where>
            <if test="year != null and year.trim() != ''">
                <![CDATA[ and date_format(create_date, '%Y') = #{year} ]]>
            </if>
        </where>
        GROUP BY date_format(create_date, '%Y-%m')
    </select>

    <select id="orderChartByDay" resultType="io.treasure.vo.EChartOrderInfoVo">
        select
        date_format(eat_time, '%Y-%m-%d') as dataRow,
        sum(case when `status` = 10 and p_order_id = '0' then 1 else 0 end) as porderCount,
        sum(case when `status` = 10 and p_order_id != '0' then 1 else 0 end) as orderCount
        from
        ct_master_order
        <where>
            <if test="startDate != null and startDate.trim() != ''">
                <![CDATA[ and date_format(eat_time, '%Y-%m-%d') >= #{startDate} ]]>
            </if>
            <if test="endDate != null and endDate.trim() != ''">
                <![CDATA[ and date_format(eat_time, '%Y-%m-%d') <= #{endDate} ]]>
            </if>
            <if test="merchantId != null">
                and merchant_id = #{merchantId}
            </if>
        </where>
        GROUP BY date_format(eat_time, '%Y-%m-%d')
    </select>

    <select id="orderChartByYear" resultType="io.treasure.vo.EChartOrderInfoVo">
        select
        date_format(eat_time, '%Y-%m') as dataRow,
        sum(case when `status` = 10 and p_order_id = '0' then 1 else 0 end) as porderCount,
        sum(case when `status` = 10 and p_order_id != '0' then 1 else 0 end) as orderCount
        from
        ct_master_order
        <where>
            <if test="year != null and year.trim() != ''">
                <![CDATA[ and date_format(eat_time, '%Y') = #{year} ]]>
            </if>
            <if test="merchantId != null">
                and merchant_id = #{merchantId}
            </if>
        </where>
        GROUP BY date_format(eat_time, '%Y-%m')
    </select>

    <select id="realTimeOrder" resultType="io.treasure.vo.RealTimeOrder">
        SELECT
            IFNULL(SUM(case when STATUS = 4 then 1 else 0 end),0) as completeOrder,
            IFNULL(
                (
                    select count(DISTINCT(l.id))
                    from (
                        select masterOrder.id from ct_master_order masterOrder
                        where
                            masterOrder.p_order_id = '0'
                            and masterOrder.status = 2
                            and masterOrder.merchant_id = #{merchantId}
                        union all
                        select masterOrder.id from ct_master_order masterOrder
                        where
                            masterOrder.order_id in (
                                select masterOrder.p_order_id
                                from ct_master_order masterOrder
                                where
                                    masterOrder.p_order_id != '0'
                                    and masterOrder.status = 2
                                    and masterOrder.merchant_id = #{merchantId}
                            )
                ) l
            )
            ,0) as conductOrder,
            IFNULL(SUM(case when STATUS = 6 then 1 else 0 end),0) as applyRefundOrder,
            sum((select
                            COUNT(0)
                        from
                            ct_slave_order ctso
                        where
                            ctso.order_id = ctmo.order_id
                            and ctmo.merchant_id = #{merchantId}
                            and ctmo.`status` = 2
                            and ctso.`status` = 6))
                         as applyBackDishes
        FROM ct_master_order ctmo
        where ctmo.merchant_id = #{merchantId}
    </select>

    <select id="pointsConfigInfo" resultType="io.treasure.dto.PointsConfigDto">
        SELECT * FROM points_config;
    </select>

    <update id="updatePointsConfig">
        update points_config
        <set >
            consumption_ratio = #{consumptionRatio},
            subscription_ratio = #{subscriptionRatio}
        </set>
        where id = #{id}
    </update>
    
    <select id="selectMerPushUser" resultType="io.treasure.vo.MerPushUserVo">
        SELECT
            up.client_id,
            u.mobile
        FROM
            ct_master_order ct
        LEFT JOIN user_push up on ct.creator = up.user_id
        LEFT JOIN ct_client_user u on ct.creator = u.id
        WHERE
            ct.merchant_id = #{id} and
            up.user_id is NOT null
        GROUP BY ct.creator
    </select>
</mapper>
