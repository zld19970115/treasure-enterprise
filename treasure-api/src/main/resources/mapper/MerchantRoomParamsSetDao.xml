<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.MerchantRoomParamsSetDao">

    <resultMap type="io.treasure.entity.MerchantRoomParamsSetEntity" id="merchantRoomParamsSetMap">

        <result property="id" column="id"/>
        <result property="roomParamsId" column="room_params_id"/>
        <result property="roomId" column="room_id"/>
        <result property="type" column="type"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="state" column="state"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="useDate" column="use_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="roomName" column="room_name"></result>
    </resultMap>
    <update id="updateStatus" parameterType="io.treasure.entity.MerchantRoomParamsSetEntity">
        update ct_merchant_room_params_set set state=#{status} where id=#{id}
    </update>
    <select id="getAvailableRoomsByData" parameterType="io.treasure.dto.MerchantRoomParamsSetDTO" resultType="io.treasure.dto.MerchantRoomParamsSetDTO">
        SELECT
        cr.`name`,
        cr.icon,
        cs.type,
        cr.`status`as cr_status,
        cr.num_low,
        cr.num_high,
        cs.id,
        cs.room_id,
        cs.state,
        cs.`status`,
        cs.room_name
        FROM
        ct_merchant_room_params_set as cs
        LEFT JOIN ct_merchant_room AS cr ON cr.id=cs.room_id
        WHERE
        DATE_FORMAT(cs.use_date,'%Y-%m-%d')=DATE_FORMAT(#{useDate},'%Y-%m-%d')
        AND cs.room_params_id=#{roomParamsId}
        AND cs.status =1
        <if test="type != null and type!=''">
            AND cs.type =#{type}
        </if>
        and cr.merchant_id=#{merchantId}  order by cr.sort asc
    </select>
    <select id="getAvailableRooms" resultType="java.lang.Integer">
        select COUNT(*) from ct_merchant_room_params_set where type=1 and `status`=1 and state=0 and merchant_id=#{merchantId}
        and UNIX_TIMESTAMP(use_date)&gt;unix_timestamp() and UNIX_TIMESTAMP(use_date)&lt;#{bigTime}
    </select>

    <select id="getAvailableRoomsDesk" resultType="java.lang.Integer">
        select COUNT(*) from ct_merchant_room_params_set where type=2 and `status`=1 and state=0 and merchant_id=#{merchantId}
        and UNIX_TIMESTAMP(use_date)&gt;unix_timestamp() and UNIX_TIMESTAMP(use_date)&lt;#{bigTime}
    </select>
    <select id="selectByMartIdAndRoomIdAndRoomId" resultType="io.treasure.entity.MerchantRoomParamsSetEntity">
          select * from ct_merchant_room_params_set where merchant_id=#{merchantId} and room_id = #{roomId} and room_params_id  =#{roomSetId} and DATE_FORMAT(use_date,'%Y-%m-%d') = #{format}
    </select>

    <delete id="deleteFreeRecord" >
        delete from ct_merchant_room_params_set
        where state != 1
            and room_id = #{roomId}
            and DATE_FORMAT(use_date,'%Y %m %d %T')>DATE_FORMAT(now(),'%Y %m %d %T');

    </delete>

    <select id="existLockedRoom" resultType="integer">

    select count(*) from ct_merchant_room_params_set
    where state = 1 and status = 1
        and room_id = #{roomId}
        and DATE_FORMAT(use_date,'%Y %m %d %T')>DATE_FORMAT(now(),'%Y %m %d %T');

    </select>

    <update id="insertEmptyRecord" >
        INSERT INTO ct_merchant_room_params_set
            (room_params_id,room_id,room_name,type,state,status,use_date,creator)
        SELECT #{roomParamsId},#{roomId},#{roomName},#{type},#{state},#{status},#{usdDate},#{creator}
        FROM DUAL
        WHERE NOT EXISTS
            (
                SELECT creator FROM ct_merchant_room_params_set
                WHERE
                    room_params_id = #{roomParamsId}
                    and room_id = #{roomId}
                    and use_date = #{usdDate}
            )


    </update>

</mapper>