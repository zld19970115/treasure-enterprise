<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.MerchantUserDao">

    <resultMap type="io.treasure.entity.MerchantUserEntity" id="merchantUserMap">
        <result property="id" column="id"/>
        <result property="mobile" column="mobile"/>
        <result property="password" column="password"/>
        <result property="weixinname" column="weixinName"/>
        <result property="weixinurl" column="weixinUrl"/>
        <result property="openid" column="openid"/>
        <result property="remark" column="remark"/>
        <result property="status" column="status"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="merchantid" column="merchantId"/>
        <result property="pid" column="pid"/>
        <result property="pidName" column="pid_name"/>
        <result property="clientId" column="client_id"/>
    </resultMap>

    <select id="getByMobile" resultType="io.treasure.entity.MerchantUserEntity">
        select * from ct_merchant_user where mobile = #{value} and status=1
    </select>
    <select id="selectByMerchantId" resultType="io.treasure.entity.MerchantUserEntity">
        select * from ct_merchant_user where merchantid = #{martId}
    </select>

    <select id="getByMobiles" resultType="io.treasure.entity.MerchantUserEntity">
        select * from ct_merchant_user where mobile = #{value}
    </select>
    <select id="getMerchantByUserId" resultType="io.treasure.dto.MerchantDTO">
        select m.* from ct_merchant_user user
        left join ct_merchant m on ( find_in_set(m.id,user.merchantId) and m.status!=9)
        where  1=1
        <if test="id!=null">
            and user.id=#{id}
        </if>
    </select>

    <select id="getMerchantByMobile" resultType="java.util.Map">
        select m.* from ct_merchant_user user
        left join ct_merchant m on ( find_in_set(m.id,user.merchantId) and m.status!=9)
        where user.mobile=#{mobile} and user.status=1
    </select>

    <select id="listPage" resultType="io.treasure.dto.MerchantUserDTO">
        select users.*,merchant.name merchantName
        from ct_merchant_user users
        left join ct_merchant merchant on find_in_set(merchant.id,users.merchantId)
        where users.status in (1,0)
        <if test="mobile != null">
            and users.mobile like  CONCAT('%',#{mobile},'%')
        </if>
        <if test="name != null">
            and users.name like  CONCAT('%',#{name},'%')
        </if>
        <if test="startDate != null and startDate != ''" >
            and date_format(users.create_date, '%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''" >
            and date_format(users.create_date, '%Y-%m-%d') &lt;= #{endDate}
        </if>
        <if test="mart_id != null">
            and users.merchantId in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
         /*order by users.create_date desc*/
    </select>

    <update id="updatePassword"   parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set password=#{password} where id=#{id}
    </update>
    <update id="updateMobile"   parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set mobile=#{password} where id=#{id}
    </update>
    <update id="updateWeixin"   parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set openid=#{openid},weixinName=#{weixinNio.treasure.entity.MerchantUserEntity"ame},weixinUrl=#{weixinUrl} where id=#{id}
    </update>
    <update id="remove" parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set status=9 where id=#{id}
    </update>
    <update id="frozen">
        update ct_merchant_user set status= #{status} where id=#{id}
    </update>
    <update id="updateMerchant"   parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set merchantid=#{merchantid} where id=#{id}
    </update>
    <update id="updateOpenid" parameterType="io.treasure.entity.MerchantUserEntity">
        UPDATE `ct_merchant_user` SET `openid` = #{openId} where mobile=#{mobile}
    </update>
    <select id="getUserByPhone" resultType="io.treasure.entity.MerchantUserEntity">
        select * from ct_merchant_user where mobile = #{mobile}
    </select>
    <select id="getUserByOpenId"  resultType="io.treasure.entity.MerchantUserEntity">
        select * from ct_merchant_user where openid=#{openid} or mini_openid=#{openid}
    </select>
    <update id="updateCID" parameterType="io.treasure.entity.MerchantUserEntity">
        update ct_merchant_user set client_id=#{clientId} where mobile=#{mobile}
    </update>
    <update id="updateMiniOpenid">
         UPDATE `ct_merchant_user` SET `mini_openid` = #{openId} where mobile=#{mobile}
    </update>
</mapper>
