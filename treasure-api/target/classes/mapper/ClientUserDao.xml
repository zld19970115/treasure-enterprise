<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.ClientUserDao">

    <resultMap type="io.treasure.entity.ClientUserEntity" id="clientUserMap">

        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="username" column="username"/>
        <result property="idCard" column="id_card"/>
        <result property="idcardFrontImg" column="idcard_front_img"/>
        <result property="idcardBackImg" column="idcard_back_img"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="birth" column="birth"/>
        <result property="password" column="password"/>
        <result property="mobile" column="mobile"/>
        <result property="headImg" column="head_img"/>
        <result property="integral" column="integral"/>
        <result property="balance" column="balance"/>
        <result property="coin" column="coin"/>
        <result property="gift" column="gift"/>
        <result property="level" column="level"/>
        <result property="openid" column="openid"/>
        <result property="unionid" column="unionid"/>
        <result property="status" column="status"/>
        <result property="origin" column="origin"/>
        <result property="way" column="way"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="clientId" column="client_id"/>
    </resultMap>
    <select id="getUserByMobile" resultType="io.treasure.entity.ClientUserEntity">
        select * from ct_client_user where mobile = #{value} and status=1
    </select>
    <select id="getUserByPhone" resultType="io.treasure.entity.ClientUserEntity">
        select * from ct_client_user where mobile = #{mobile}
    </select>

    <select id="getUserByOpenId"  parameterType="io.treasure.entity.ClientUserEntity" resultType="io.treasure.entity.ClientUserEntity">
        select * from ct_client_user where openid=#{openid}
    </select>
    <update id="updateOpenid" parameterType="io.treasure.entity.ClientUserEntity">
        UPDATE `ct_client_user` SET `openid` = #{openId} where mobile=#{mobile}
    </update>
    <update id="updateCID" parameterType="io.treasure.entity.ClientUserEntity">
        update ct_client_user set client_id=#{clientId} where mobile = #{mobile}
    </update>
    <select id="getClientUser" parameterType="io.treasure.entity.ClientUserEntity" resultType="io.treasure.entity.ClientUserEntity">
        select * from ct_client_user where id=#{id}
    </select>
    <select id="selectByMobile" resultType="io.treasure.entity.ClientUserEntity">
        select * from ct_client_user where mobile=#{mobile}
    </select>


    <update id="subtractGiftByMasterOrderCreate">
        update ct_client_user set gift=gift- ${gift}
        where id = #{creator}
    </update>

    <select id="selectListByCondition" resultType="io.treasure.entity.ClientUserEntity" parameterType="io.treasure.dto.QueryClientUserDto">
         select * from ct_client_user
         <where>

            <if test="integral != null and integral != ''">
                <choose>
                    <when test="integralConditionType == 0">
                        and integeral >= #{integral}
                    </when>
                    <otherwise>
                        or integral >= #{integral}
                    </otherwise>
                </choose>
            </if>
            <if test="coin != 0 and coin != ''">
                <choose>
                    <when test="coinConditionType == 0">
                        and coin >= #{coin}
                    </when>
                    <otherwise>
                        or coin >= #{coin}
                    </otherwise>
                </choose>
            </if>
            <if test="gift != 0 and gift != ''">
                <choose>
                    <when test="giftConditionType == 0">
                        and gift >= #{gift}
                    </when>
                    <otherwise>
                        or gift >= #{gift}
                    </otherwise>
                </choose>
            </if>
            <if test="level != 0 and level != ''">
                <choose>
                    <when test="levelConditionType == 0">
                        and level >= #{level}
                    </when>
                    <otherwise>
                        or level >= #{level}
                    </otherwise>
                </choose>
            </if>
            <choose>
                <when test="createDateConditionType == 0"><!--具体时间-->
                    <if test="startTime != null and startTime != ''">
                        and DATE_FORMAT(create_date,'%Y %m %d %T') >= DATE_FORMAT(#{startTime},'%Y %m %d %T')
                    </if>
                    <if test="stopTime != null and stopTime != ''">
                        and DATE_FORMAT(#{stopTime},'%Y %m %d %T') >= DATE_FORMAT(create_date,'%Y %m %d %T')
                    </if>
                </when>
                <when test="createDateConditionType == 1"><!--按日算-->
                    <if test="startTime != null and startTime != ''">
                        and DATE_FORMAT(create_date,'%Y %m %d') >= DATE_FORMAT(#{startTime},'%Y %m %d')
                    </if>
                    <if test="stopTime != null and stopTime != ''">
                        and DATE_FORMAT(#{stopTime},'%Y %m %d') >= DATE_FORMAT(create_date,'%Y %m %d')
                    </if>
                </when>
                <otherwise><!--按月算-->
                    <if test="startTime != null and startTime != ''">
                        and DATE_FORMAT(create_date,'%Y %m') >= DATE_FORMAT(#{startTime},'%Y %m')
                    </if>
                    <if test="stopTime != null and stopTime != ''">
                        and DATE_FORMAT(#{stopTime},'%Y %m') >= DATE_FORMAT(create_date,'%Y %m')
                    </if>
                </otherwise>
            </choose>
         </where>
    </select>

</mapper>