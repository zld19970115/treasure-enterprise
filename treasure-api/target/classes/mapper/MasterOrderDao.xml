<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.treasure.dao.MasterOrderDao">

    <resultMap type="io.treasure.entity.MasterOrderEntity" id="masterOrderMap">

        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="merchantId" column="merchant_id"/>
        <result property="roomId" column="room_id"/>
        <result property="reservationType" column="reservation_type"/>
        <result property="reservationId" column="reservation_id"/>
        <result property="discountId" column="discount_id"/>
        <result property="eatTime" column="eat_time"/>
        <result property="totalMoney" column="total_money"/>
        <result property="payMoney" column="pay_money"/>
        <result property="status" column="status"/>
        <result property="payMode" column="pay_mode"/>
        <result property="invoice" column="invoice"/>
        <result property="description" column="description"/>
        <result property="payDate" column="pay_date"/>
        <result property="contacts" column="contacts"/>
        <result property="contactNumber" column="contact_number"/>
        <result property="checkStatus" column="check_status"/>
        <result property="checkMode" column="check_mode"/>
        <result property="refundReason" column="refund_reason"/>
        <result property="refundId" column="refund_id"/>
        <result property="refundDate" column="refund_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="createDate" column="create_date"/>
        <result property="creator" column="creator"/>
        <result property="updater" column="updater"/>
        <result property="platformBrokerage" column="platform_brokerage"/>
        <result property="merchantProceeds" column="merchant_proceeds"/>
    </resultMap>
    <select id="selectByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order  where order_id=#{orderId}
    </select>
    <select id="listMerchant" parameterType="Map" resultType="io.treasure.dto.MerchantOrderDTO">
        select masterOrder.*,room.name roomName,cuser.head_img userHeadImg from ct_master_order masterOrder
        left join ct_merchant_room room on masterOrder.room_id=room.id
        left join ct_client_user cuser on masterOrder.creator=cuser.id
        where masterOrder.p_order_id = 0
        <if test="status != null">
            and masterOrder.status in
            <foreach item="item" index="index" collection="statusStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="merchantId != null">
            and masterOrder.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderId != null  and orderId.trim() != '' ">
            and masterOrder.order_id like CONCAT('%',#{orderId},'%')
        </if>
    </select>
    <select id="selectPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id = #{orderId} or order_id  = #{orderId}
    </select>
    <update id="updateStatusAndReason" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set status=#{status},updater=#{updater},refund_reason=#{refundReason},
        refund_date=#{refundDate} where id=#{id}
    </update>
    <update id="updateStatusById" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set status=#{status},updater=#{updater},refund_reason=#{refundReason},
        refund_date=#{refundDate},check_status=1 where id=#{id}
    </update>

    <select id="getOrderByOrderId" parameterType="map" resultType="io.treasure.dto.MasterOrderDTO">
        select *  from ct_master_order where order_id=#{orderId}
    </select>
    <select id="updateOrderStatus" parameterType="io.treasure.entity.MerchantEntity">
        update ct_master_order set  status=#{status}  where order_id=#{orderId} ;
    </select>
    <update id="updatePayMode" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order set pay_mode=#{payMode} where order_id=#{orderId}
    </update>
    <select id="getOrderById" parameterType="map" resultType="io.treasure.dto.MasterOrderDTO">
        SELECT *  from ct_master_order where id=#{id}
    </select>
    <select id="selectBYPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
          select * from ct_master_order where p_order_id = #{orderId} and status not in (1,3,5,8,9)
    </select>
    <select id="selectPOrderIdByMainOrderID" resultType="io.treasure.entity.MasterOrderEntity">
          select * from ct_master_order where p_order_id = #{orderId} and reservation_type = 2 and status not in(1,3,8,11)
    </select>
    <select id="selectPOrderIdAndS1" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status  in (1,3,4,5,8,9)
    </select>
    <update id="updatePayMoney" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order set pay_money=#{PayMoney} where order_id=#{orderId}
    </update>
    <select id="getRoomOrderByPorderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  reservation_type=2 and status = 2
    </select>
    <select id="getOrderByPOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id = #{orderId} and status  in (2,4,6)
    </select>
    <select id="listMerchant2" parameterType="Map" resultType="io.treasure.dto.MerchantOrderDTO">
        select masterOrder.*,room.name roomName,cuser.head_img userHeadImg ,cs.status as csStatus from ct_master_order masterOrder
        left join ct_merchant_room room on masterOrder.room_id=room.id
        left join ct_client_user cuser on masterOrder.creator=cuser.id
        left join ct_stimme cs on cs.order_id =masterOrder.order_id
        where 1=1
        <if test="orderId != null  and orderId.trim() != '' ">
            and masterOrder.order_id like CONCAT('%',#{orderId},'%')
        </if>
        <if test="status != null">
            and masterOrder.status in
            <foreach item="item" index="index" collection="statusStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="merchantId != null">
            and masterOrder.merchant_id in
            <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getAllMainOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where creator=#{userId} and p_order_id='0'
    </select>
    <select id="getAuxiliaryOrderByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status IN(2,4,6,7,10)
    </select>
    <select id="getAuxiliaryOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where p_order_id=#{orderId}
    </select>

    <select id="getMasterOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where order_id=#{orderId}
    </select>
    <select id="getOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where order_id=#{orderId}
    </select>

    <select id="selectPOrderIdHavePaid" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status  not in (1,5,8,9)
    </select>

    <select id="selectAgreeRefundOrder" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where p_order_id = #{orderId} and status=8
    </select>


    <select id="getPayOrder" resultType="io.treasure.dto.OrderDTO">
        select * from ct_master_order where creator=#{userId} and p_order_id='0' and status=#{status}
    </select>

    <select id="getAuxiliaryPayOrder" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status=#{status}
    </select>

    <select id="getAuxiliaryPayOrders" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status in (2,7)
    </select>
    <select id="getAuxiliaryPayOrderss" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where p_order_id=#{orderId} and  status in (2,7,10)
    </select>

    <update id="updateSlaveOrderPointDeduction" parameterType="io.treasure.entity.MasterOrderEntity">
        update ct_master_order SET merchant_proceeds=#{mp},platform_brokerage=#{pb} where order_id=#{orderId}
    </update>
    
    <select id="getOrderByReservationId" resultType="io.treasure.entity.MasterOrderEntity">
       select * from ct_master_order where reservation_id=#{reservationId} and check_status != 1 AND status not in (1,3,5,8,9,11)
    </select>
    <select id="getStatus4Order" resultType="io.treasure.entity.MasterOrderEntity">
        select  * from ct_master_order where 1=1
        <if test="merchantId != null  and merchantId>0 ">
            and merchant_id = #{merchantId}
        </if>
         and status = 4
    </select>
    <select id="getOrder1" resultType="io.treasure.dto.OrderDTO">
           select * from ct_master_order where order_id=#{orderId}  or p_order_id =#{orderId}

    </select>
    <select id="getOrderDTOByPorderId" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId} and reservation_type = 2
    </select>

    <select id="getAffiliateOrde" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId}
    </select>
    <select id="selectPOrderIdAndS" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where p_order_id = #{orderId} and status  in (1,3,4,5,8,9)
    </select>
    <select id="selectOrder" resultType="io.treasure.dto.OrderDTO">
          select * from ct_master_order where order_id = #{orderId}
    </select>
    <select id="selectByUserId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order where creator = #{userId} and status in (2,4,6,7);
    </select>
    <select id="selectByMasterId" resultType="io.treasure.entity.MasterOrderEntity">
         select * from ct_master_order where status in (2,4,6,7)
        and merchant_id in
        <foreach item="item" index="index" collection="merchantIdStr" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPlatformBalance" resultType="java.math.BigDecimal">
        select sum(pay_money) from ct_master_order where `status` =10
    </select>

    <select id="getOrderByFinance" resultType="io.treasure.dto.MasterOrderDTO">
        select * from ct_master_order where p_order_id=#{orderId} and status in(2,7,8)
    </select>
    <select id="selectUnPayOrderByOrderId" resultType="io.treasure.entity.MasterOrderEntity">
        select * from ct_master_order
        where order_id=#{orderId} and status = 1
    </select>
    <update id="updatePayStatus">
        update ct_master_order SET status=#{status},pay_mode=#{payMode},pay_date=#{payDate}
        where order_id=#{orderId}
    </update>

</mapper>